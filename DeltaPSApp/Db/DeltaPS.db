#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


# Short and long form of identification string
record(stringin, "$(device):Info:IDN") {
  field(DESC, "SCPI identification string")
  field(DTYP, "stream")
  field(SCAN, "10 second")
  field(INP, "@DeltaPS.proto getIDN() $(PORT) $(A)")
  field(PINI, "YES")
  field(TPRO, "0")
}

### ## #
#
# VOLTAGE
#

record(ai, "$(device):Voltage:Readback") {
  field(DESC, "Get Output Voltage Readback")
  field(SCAN, "$(scan) second")
  field(DTYP, "stream")
  field(INP, "@DeltaPS.proto getF(MEAS:VOL?) $(PORT) $(A)")
  field(PINI, "YES")
  field(PREC, "$(prec)")
  field(EGU, "V")
  field(HOPR, "$(v_max)")
  field(LOPR, "$(v_min)")
  field(TPRO, "0")
}

record(ai, "$(device):Voltage:Setpoint:Get") {
  field(DESC, "Get Setpoint for Output Voltage")
  field(SCAN, "$(scan) second")
  field(DTYP, "stream")
  field(INP, "@DeltaPS.proto getF(SOUR:VOL?) $(PORT) $(A)")
  field(PINI, "1")
  field(PREC, "$(prec)")
  field(EGU, "V")
  field(HOPR, "$(v_max)")
  field(LOPR, "$(v_min)")
  field(TPRO, "0")
}

record(ao, "$(device):Voltage:Setpoint") {
  field(DESC, "Setpoint for Output Voltage")
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto setFCtrl(SOUR:VOL,SOUR:CUR,${c_ctrl}) $(PORT) $(A)")
  field(FLNK, "$(device):int_fanout")
  field(PREC, "$(prec)")
  field(VAL, "0")
  field(EGU, "V")
#  field(HOPR, "$(v_max)")
#  field(LOPR, "$(v_min)")
#  field(DRVH, "$(v_max)")
#  field(DRVL, "$(v_min)")
  field(TPRO, "0")
}

### ## #
#
# CURRENT
#

record(ai, "$(device):Current:Readback") {
  field(DESC, "Get Output Current")
  field(SCAN, "$(scan) second")
  field(DTYP, "stream")
  field(INP, "@DeltaPS.proto getF(MEAS:CUR?) $(PORT) $(A)")
  field(PINI, "1")
  field(PREC, "$(prec)")
  field(EGU, "A")
  field(HOPR, "$(c_max)")
  field(LOPR, "$(c_min)")
  field(TPRO, "0")
}

record(ai, "$(device):Current:Setpoint:Get") {
  field(DESC, "Get Setpoint for Output Current")
  field(SCAN, "$(scan) second")
  field(DTYP, "stream")
  field(INP, "@DeltaPS.proto getF(SOUR:CUR?) $(PORT) $(A)")
  field(PINI, "YES")
  field(PREC, "$(prec)")
  field(EGU, "A")
  field(HOPR, "$(c_max)")
  field(LOPR, "$(c_min)")
  field(TPRO, "0")
}

record(ao, "$(device):Current:Setpoint") {
  field(DESC, "Setpoint for Output Current")
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto setFCtrl(SOUR:CUR,SOUR:VOL,${v_ctrl}) $(PORT) $(A)")
  field(FLNK, "$(device):int_fanout")
  field(PREC, "$(prec)")
  field(EGU, "A")
  field(VAL, "0")
  field(HOPR, "$(c_max)")
  field(LOPR, "$(c_min)")
  field(DRVH, "$(c_max)")
  field(DRVL, "$(c_min)")
  field(TPRO, "0")
}

### ## #
#
# Ramp function + disable at the end
#

record(ao, "$(device):Current:Ramp")
{
  field(DESC, "Current ramp")
  field(SCAN, "$(c_ramp) second")
  field(DTYP, "Soft Channel")
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto setFCtrl(SOUR:CUR,SOUR:VOL,${v_ctrl}) $(PORT) $(A)")
  field(EGU, "A")
  field(PREC, "$(prec)")
  field(VAL, "0")
  field(HOPR, "$(c_max)")
  field(LOPR, "$(c_min)")
  field(OROC, "$(c_step)")
  field(FLNK, "$(device):Status:Ramping")
  field(DISV, "0")
  field(SDIS, "$(device):Status:Ramping")
  field(TPRO, "0")
}

record(calc, "$(device):Status:Ramping") {
  field(SCAN, "Passive")
  field(CALC, "A==0 && B==1 && C!=D")
# Disable ramp if error
  field(INPA, "$(device):Status:ErrorSum") 
# Disable ramp if off
  field(INPB, "$(device):Status:On")
# Disable ramp if target reached
  field(INPC, "$(device):Current:Ramp.VAL")
  field(INPD, "$(device):Current:Ramp.OVAL")
  field(TPRO, "0")
}


### ## #
#
# CURRENT
# sync setpoint get and setpoint set
#

record(dfanout, "$(device):Current:Sync") {
  field(SELM, "All")
  field(OMSL, "closed_loop")
  field(DOL,  "$(device):Current:Setpoint:Get.VAL NPP MSS")
  field(OUTA, "$(device):Current:Setpoint PP")
  field(TPRO, "0")
}

### ## #
#
# CURRENT + VOLTAGE
# update after voltage or current set
#

record(fanout, "$(device):int_fanout") {
  field(LNK1, "$(device):Voltage:Setpoint:Get")
  field(LNK2, "$(device):Voltage:Readback")
  field(LNK3, "$(device):Current:Setpoint:Get")
  field(LNK4, "$(device):Current:Readback")
}

### ## #
#
# COMMANDS
# reset
#

record(bo, "$(device):Cmd:Reset") {
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto cmd(*RST) $(PORT) $(A)")
  field(TPRO, "0")
}

### ## #
#
# COMMANDS
# ON diverted, forwarded to Start command
#

record(bo, "$(device):Cmd:On") {
  field(DESC, "Starts the PS unit")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):Cmd:Start PP")
  field(TPRO, "0")
}

### ## #
#
# COMMANDS
# ON direct, forwarded directly to the device
# Warning: called from Start command, take care of forwards, do not create a closed loop
#

record(bo, "$(device):Cmd:Direct:On") {
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto cmd1(OUTP,1) $(PORT) $(A)")
  field(TPRO, "0")
}

### ## #
#
# COMMANDS
# OFF diverted, forwarded to Stop command
#
record(bo, "$(device):Cmd:Off") {
  field(DESC, "Stops the PS unit")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):Cmd:Stop PP")
  field(TPRO, "0")
}

### ## #
#
# COMMANDS
# OFF direct, forwarded directly to the device
# Warning: called from Stop command, take care of forwards, do not create a closed loop
#
record(bo, "$(device):Cmd:Direct:Off") {
  field(DTYP, "stream")
  field(OUT, "@DeltaPS.proto cmd1(OUTP,0) $(PORT) $(A)")
  field(TPRO, "0")
}

### ## #
#
# INFO
#

record(stringin, "$(device):Info:Alias") {
  field(DESC, "Alternative device name")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(VAL, "$(alias)")
}

record(bi, "$(device):Info:HasDelegates") {
  field(DESC, "Device is master device for slaves")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(VAL, "0")
}

### ## #
#
# STATUS
#

record(mbbiDirect, "$(device):Status") {
  field(DESC, "Status")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status:int_Sum.VAL NPP MSS")
  field(FLNK, "$(device):int_ErrorSum PP NMS")
  field(PINI, "YES")
  field(TPRO, "0")
}

record(calc, "$(device):int_ErrorSum") {
  field(SCAN, "Passive")
  field(CALC, "(((8+16+256+512+1024+2048+4096)&A)!=0)|B!=0")
  field(INPA, "$(device):Status.VAL NPP MSS")
  field(INPB, "$(device):Status.SEVR NPP MSS")
  field(FLNK, "$(device):Status:ErrorSum PP MSS")
  field(TPRO, "0")
}

record(bi, "$(device):Status:ErrorSum") {
  field(DESC, "Device has errors")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):int_ErrorSum.VAL NPP MSS")
  field(FLNK, "$(device):Status:Bit0 PP NMS")
  field(TPRO, "0")
}

record(longin, "$(device):Status:On") {
  field(DESC, "Status")
  field(DTYP, "stream")
  field(SCAN, "$(scan) second")
  field(INP, "@DeltaPS.proto getON() $(PORT) $(A)")
  field(PINI, "YES")
  field(TPRO, "0")
}

record(longin, "$(device):Status:int_getStatusA") {
  field(DESC, "Status")
  field(DTYP, "stream")
  field(SCAN, "$(scan) second")
  field(INP, "@DeltaPS.proto getD(STAT:REG:A?) $(PORT) $(A)")
  field(FLNK, "$(device):Status:int_A PP MSS")
  field(PINI, "YES")
  field(TPRO, "0")
}

record(longin, "$(device):Status:int_getStatusB") {
  field(DESC, "Status")
  field(DTYP, "stream")
  field(SCAN, "$(scan) second")
  field(INP, "@DeltaPS.proto getD(STAT:REG:B?) $(PORT) $(A)")
  field(FLNK, "$(device):Status:int_B PP MSS")
  field(PINI, "YES")
  field(TPRO, "0")
}

record(calc, "$(device):Status:int_A") {
  field(SCAN, "Passive")
  field(CALC, "(1+2+8+16+64+256+512+1024+2048+4096+8192+16384) & A")
  field(INPA, "$(device):Status:int_getStatusA.VAL NPP MSS")
  field(FLNK, "$(device):Status:int_Sum PP MSS")
  field(TPRO, "0")
}

record(calc, "$(device):Status:int_B") {
  field(SCAN, "Passive")
  field(CALC, "((1 & A) << 2) + ((2 & A) << 4)")
  field(INPA, "$(device):Status:int_getStatusB.VAL NPP MSS")
  field(FLNK, "$(device):Status:int_Sum PP MSS")
  field(TPRO, "0")
}

record(calc, "$(device):Status:int_Sum") {
  field(SCAN, "Passive")
  field(CALC, "A+B")
  field(INPA, "$(device):Status:int_A.VAL NPP MSS")
  field(INPB, "$(device):Status:int_B.VAL NPP MSS")
  field(FLNK, "$(device):Status PP MSS")
  field(TPRO, "0")
}

### ## #
#
# STATUS LED SUPPORT
#

record(mbbi, "$(device):Status:Strings") {
  field(DESC, "Descriptions of status bits")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(NOBT, "16")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ELVL, "11")
  field(TVVL, "12")
  field(TTVL, "13")
  field(FTVL, "14")
  field(FFVL, "15")
  field(ZRST, "Ctrl Volt")
  field(ONST, "Ctrl Curr")
  field(TWST, "Remote Volt")
  field(THST, "Volt lim")
  field(FRST, "Curr lim")
  field(FVST, "Remote Curr")
  field(SXST, "DC Out Fail")
  field(SVST, "N/A")
  field(EIST, "Over Temp")
  field(NIST, "PowSink OverLo")
  field(TEST, "AC In Fail")
  field(ELST, "Interlock")
  field(TVST, "Rem ShDdown")
  field(TTST, "Output ON")
  field(FTST, "Front panel lock")
  field(FFST, "N/A")
}

record(bi, "$(device):Status:Bit0") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B0 NPP MSS")
  field(FLNK, "$(device):Status:Bit1 PP NMS")
  field(DESC, "Constant Volt")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit1") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B1 NPP MSS")
  field(FLNK, "$(device):Status:Bit2 PP NMS")
  field(DESC, "Constant Current")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit2") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B2 NPP MSS")
  field(FLNK, "$(device):Status:Bit3 PP NMS")
  field(DESC, "Rem CV")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit3") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B3 NPP MSS")
  field(FLNK, "$(device):Status:Bit4 PP NMS")
  field(DESC, "Volt Limit")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit4") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B4 NPP MSS")
  field(FLNK, "$(device):Status:Bit5 PP NMS")
  field(DESC, "Curr Limit")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit5") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B5 NPP MSS")
  field(FLNK, "$(device):Status:Bit6 PP NMS")
  field(DESC, "Rem CC")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit6") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B6 NPP MSS")
  field(FLNK, "$(device):Status:Bit7 PP NMS")
  field(DESC, "DC Out Fail")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit7") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B7 NPP MSS")
  field(FLNK, "$(device):Status:Bit8 PP NMS")
  field(DESC, "N/A")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit8") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B8 NPP MSS")
  field(FLNK, "$(device):Status:Bit9 PP NMS")
  field(DESC, "Over Temp")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit9") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.B9 NPP MSS")
  field(FLNK, "$(device):Status:Bit10 PP NMS")
  field(DESC, "PwrSink OvrLoad")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit10") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BA NPP MSS")
  field(FLNK, "$(device):Status:Bit11 PP NMS")
  field(DESC, "AC In Fail")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit11") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BB NPP MSS")
  field(FLNK, "$(device):Status:Bit12 PP NMS")
  field(DESC, "Interlock")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit12") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BC NPP MSS")
  field(FLNK, "$(device):Status:Bit13 PP NMS")
  field(DESC, "Rem Shutdown")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit13") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BD NPP MSS")
  field(FLNK, "$(device):Status:Bit14 PP NMS")
  field(DESC, "Output ON")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit14") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BE NPP MSS")
  field(FLNK, "$(device):Status:Bit15 PP NMS")
  field(DESC, "Front panel lock")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}

record(bi, "$(device):Status:Bit15") {
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(INP, "$(device):Status.BF NPP MSS")
  field(DESC, "N/A")
  field(ZSV, "NO_ALARM")
  field(OSV, "NO_ALARM")
  field(TPRO, "0")
}
